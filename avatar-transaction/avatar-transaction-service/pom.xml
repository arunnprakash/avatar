<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.kirana.avatar</groupId>
		<artifactId>avatar-transaction</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>avatar-transaction-service</artifactId>
	<name>avatar-transaction-service</name>
	<description>avatar-transaction-service</description>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.libphonenumber</groupId>
			<artifactId>libphonenumber</artifactId>
			<version>8.9.9</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-common-service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-transaction-dto</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-transaction-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-transaction-feign</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-transaction-mapper</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.kirana.avatar</groupId>
			<artifactId>avatar-transaction-dao</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Getter Setter -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.version}</version><!--$NO-MVN-MAN-VER$-->
			<scope>provided</scope>
		</dependency>
		<!-- Swagger 2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- TypeScript Generator - Spring Controller as Angular Service and DTO as Model -->
		<dependency>
			<groupId>org.leandreck.endpoints</groupId>
			<artifactId>annotations</artifactId>
			<version>0.4.0</version>
			<scope>provided</scope> <!-- the annotations and processor are only needed at compile time -->
			<optional>true</optional> <!-- they need not to be transitively included in dependent artifacts -->
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>${org.projectlombok.maven.plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<addOutputDirectory>false</addOutputDirectory>
							<sourceDirectory>src/main/java</sourceDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<profiles>
						<profile>dev</profile>
					</profiles>
					<mainClass>com.kirana.avatar.gateway.AvatarGatewayApplication</mainClass>
					<addResources>false</addResources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>